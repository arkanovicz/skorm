package $package

import com.republicate.skorm.core.bagAttribute
import com.republicate.skorm.core.instanceAttribute

// attributes declaration for core
fun ${databaseClass}.initJoins() {
#foreach ($schema in $database.schemas.values())
    #set($schemaClass = "${databaseClass}.#pascal($schema.name)Schema")
    #set($schemaInstance = "${databaseClass}.#camel($schema.name)")
    #foreach ($table in $schema.tables.values())
        #foreach($fk in $table.foreignKeys)
          #set($instanceClass = "${schemaClass}.#pascal($fk.towards.name)")
    // forward foreign key attribute
    ${schemaInstance}.entity("#camel($fk.from.name)").instanceAttributes.#if($fk.nonNull)instanceAttribute#{else}nullableInstanceAttribute#end<$instanceClass>("#camel($fk.towards.name)", $instanceClass, "$kotlin.foreignKeyForwardQuery($fk)")
    // reverse foreign key attribute
    ${schemaInstance}.entity("#camel($fk.towards.name)").instanceAttributes.bagAttribute<$instanceClass>("#plural("#camel($fk.from.name)")", $instanceClass, "$kotlin.foreignKeyReverseQuery($fk)")
        #end
    #end
#end
}
