package $package

import kotlinx.datetime.*
import com.republicate.skorm.core.*

#set ($databaseClass = "#pascal($database.name)Database")

// runtime model attributes declaration for core
fun ${package}.${databaseClass}.initRuntimeModel() {
#foreach ($schema in $model.schemas)
    #set($schemaClass = "${databaseClass}.#pascal($schema.name)Schema")
    #set($schemaInstance = "${databaseClass}.#camel($schema.name)")
    #foreach ($item in $schema.items)
        #set($itemClass = false)
        #if($item.receiver)
            #set($receiver = "${schemaInstance}.entity(""#snake(${item.receiver})"").instanceAttributes")
        #else
            #set($receiver = "${schemaInstance}")
        #end
        #if($item.action)
            #set($attribute = 'mutationAttribute')
        #elseif($item.type.isComposite())
            #if($item.type.parent)
                #set($itemClass = "#pascal($item.name)")
                #set($factory = "::$itemClass")
                #if($item.multiple)
                    #set($attribute = "bagAttribute<$itemClass>")
                #elseif($item.nullable)
                    #set($attribute = "nullableInstanceAttribute<$itemClass>")
                #else
                    #set($attribute = "instanceAttribute<$itemClass>")
                #end
            #else
                #if($item.multible)
                    #set($attribute = 'rowSetAttribute')
                #elseif($item.nullable)
                    #set($attribute = 'nullableRowAttribute')
                #else
                    #set($attribute = 'rowAttribute')
                #end
            #end
        #elseif ($item.type.isEntity())
            #set($itemClass = "#pascal($database.name)Database.#pascal($schema.name)Schema.#pascal($item.type.name)")
            #set($factory = "$itemClass::new")
            #if($item.multiple)
                #set($attribute = "bagAttribute<$itemClass>")
            #elseif($item.nullable)
                #set($attribute = "nullableInstanceAttribute<$itemClass>")
            #else
                #set($attribute = "instanceAttribute<$itemClass>")
            #end
        #else
            #if($item.multiple)
                #set($attribute = "rowSetAttribute<$itemClass>")
            #elseif($item.nullable)
                ##          #set($attribute = "nullable#capitalize(${item.type.name})Attribute")
                #set($attribute = "scalarAttribute<${item.type.name}?>")
            #else
                ##          #set($attribute = "#decapitalize($item.type.name)Attribute") // item.type.name = $item.type.name, decapitalize = $item.type.name.decapitalize()
                #set($attribute = "scalarAttribute<${item.type.name}>")
            #end
        #end

    // attribute ${item.receiver|$schema.name}.$item.name
    ${receiver}.${attribute}("$item.name", """
        $item.sql""".trimIndent()#if($itemClass), $factory#{end})

    #end
#end
}
